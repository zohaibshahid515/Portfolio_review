{

    "unknown_title": {
      "prompt": "The title of this page is unknown, which means it was not matched with any predefined titles. Carefully analyze the page content and extract ALL information into a well-structured JSON object. Preserve all meaningful elements, including text, handwritten notes, diagrams, tables, forms, checkboxes, selection marks, IDs, signatures, and dates. If tables are present, capture ALL rows completely without skipping any. If any column contains selection marks or checkboxes, represent them explicitly as `selected` or `unselected`. For every table, create an array where each row is a JSON object with column headers (or generic `column_1`, `column_2`, etc. if headers are missing). For non-tabular content (paragraphs, form fields, handwritten notes), use descriptive key names like `text_blocks`, `form_fields`, `handwritten_entries`. Ensure no important detail is omitted or summarized. Input page content: {page}"
    },
  

  "My CDA professional portfolio": {
  "prompt": "Convert the page content into a well-structured JSON object with the fields: `title`, `candidate_name`, `candidate_id_number` (if missing, set value as 'NOT FOUND'), `candidate_signature`, and `date`. This page contains a table with exactly 18 rows, where the third column contains selection marks (selected or unselected). Represent each row as a JSON object in an array named `selection_table`, with `row_number` and `selection_status`. Ensure exactly 18 rows are captured, even if some rows are blank. Preserve all meaningful information from the page without omission. Input page content: {page}"
  },

  "Summary of My CDA® Education": {
    "prompt": "Convert the page content into a structured JSON object with fields: `title`, `candidate_name`, `candidate_id_number` (if missing, set value as 'NOT FOUND'), `candidate_signature`, and `date`. The page contains a table with exactly 8 rows and 2 columns: the first column lists CDA subject areas, the second column lists initials. Represent the table as an array named `cda_subject_areas`, where each object contains `subject_area` and `initials`. Do not validate initials for correctness, only capture their presence. Include any text below the table related to clock hours in a separate field `clock_hours_summary`. Do not add any extra variables. Input page content: {page}"
  },

  "Certification of completion, candidate’s training transcripts or letter": {    "prompt": "Convert the page content into a structured JSON object capturing all available metadata: `title`, `subtitle` (if any), `certification_or_course_name`, `total_hours_completed`, `candidate_name`, `organization_name`, `logo_present` (boolean), `signature_present` (boolean), and `date`. Retain all original wording without loss. Input page content: {page}" },
"Family Questionnaires summary sheet": {
  "prompt": "Convert the page content into a structured JSON object with the following fields: `title`, `candidate_name`, `candidate_id_number` (if missing, set value as 'NOT FOUND'), `distributed_family_questionnaires`, `collected_family_questionnaires`, `areas_of_strength`, and `areas_of_professional_growth`. Capture all handwritten responses exactly as they appear. Preserve all numerical values and descriptive text without summarizing. Input page content: {page}"
},
"Family Questionnaire": {
  "prompt": "Convert the page content into a structured JSON object with fields: `title`, `candidate_name` (if missing, set value as 'NOT FOUND'), and an array `questions`. Each object in `questions` should contain: `question_number`, `question_text`, and `selected_choice` (value should be one of 1, 2, or 3 as marked). For pages with 12 questions, also include a `surveyed_person_name` field at the bottom of the JSON. Ensure all questions are represented in sequence (either 2 or 12 depending on the page). Do not omit any question. Input page content: {page}"
},
"RC V record keeping forms": {
  "prompt": "Convert the page content into a structured JSON object with fields: `title`, `candidate_name` (if missing, set value as 'NOT FOUND`), and `record_entries` (an array where each object contains `field_name` and `field_value` exactly as they appear on the form). Also include `signature_present` (true/false). Preserve all labels and values exactly as in the original form. Input page content: {page}"
},

"RC V": {
  "prompt": "This page contains sections 1 to 9. Extract all sections into a structured JSON object with fields: `section_number`, `section_title`, and `response`. For handwritten answers, capture the exact text without summarization. Ensure all sections (1–9) are captured even if they span multiple pages. Preserve all formatting and do not omit blank sections (set their `response` as 'NOT PROVIDED'). Input page content: {page}"
},

"DISTRICT OF COLUMBIA OFFICE OF THE STATE SUPERINTENDENT OF EDUCATION": {
  "prompt": "This page contains section 9. Extract section into a structured JSON object with fields: `title', 'section' as key and 'value'. For handwritten answers, capture the exact text without summarization. Ensure section 10 is captured. Preserve all formatting and do not omit blank sections (set their `response` as 'NOT PROVIDED'). Input page content: {page}"
},

"RC V Accident report": {
  "prompt": "This page contains an accident report form with a two-column table.start output json with 'title' than, Extract all rows as key-value pairs where the first column is `field_name` and the second column is `field_value` (capture exactly as written, including checkmarks or selection marks). For any checkbox or selection mark, explicitly record the status as `selected` or `unselected`. At the bottom, extract `signature` and `date` fields separately. Preserve all details without summarization. Input page content: {page}"
},


  "RC V 42 month questionnaire (Informations)": {
    "prompt": "Convert the page content into a well-structured JSON object with fields: `title` and `responses`. Capture all key–value pairs exactly as they appear on the form. Preserve all user-filled information, including handwritten notes, numeric values, and selection marks. Represent selection marks explicitly as `selected` or `unselected`. Do not omit any data."
  },
  "RC V 42 month questionnaire (Communication)": {
    "prompt": "Convert the page content into a structured JSON object with fields: `title` and `communication_section`. Extract exactly 6 questions under the 'Communication' heading, each as an object with `question_number`, `question_text`, and `selected_choice` (1, 2, or 3). Preserve any additional notes or comments."
  },
  "RC V 42 month questionnaire (gross motor)": {
    "prompt": "Convert the page content into structured JSON with fields: `title`, `gross_motor_section`, and `fine_motor_section`. Capture 6 selection-mark questions under 'Gross Motor' and 1 selection-mark question under 'Fine Motor'. For each, include `question_number`, `question_text`, and `selected_choice`. Preserve any notes."
  },
  "RC V 42 month questionnaire (fine motor)": {
    "prompt": "Convert the page content into structured JSON with fields: `title`, `fine_motor_section`, and `problem_solving_section`. Capture 5 selection-mark questions under 'Fine Motor' and 3 under 'Problem Solving'. For each, include `question_number`, `question_text`, and `selected_choice`. Preserve any notes."
  },
  "RC V 42 month questionnaire (problem solving and personal social)": {
    "prompt": "Convert the page content into structured JSON with fields: `title`, `problem_solving_section`, `personal_social_section`, and `overall_section`. Capture 3 selection-mark questions under 'Problem Solving', 6 under 'Personal Social', and 1 under 'Overall'. For each, include `question_number`, `question_text`, and `selected_choice`. Preserve all comments."
  },
  "RC V 42 month questionnaire (Overall)": {
    "prompt": "Convert the page content into structured JSON with fields: `title` and `overall_section`. Capture all user-provided information, including 3–6 selection-mark questions and any notes under the 'Overall' heading. For each question, include `question_number`, `question_text`, and `selected_choice`. Preserve any extra comments."
  },
  "RC V 42 month ASQ-3 information Summary": {
    "prompt": "Convert the page content into a structured JSON object with fields: `title` and `asq3_summary`. Include all sections and their details. Capture all scores, selection marks, and notes. Preserve the original structure and do not omit any user-provided responses."
  },
  "Competency standard V - Reflections": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `reflections`. Break down each paragraph into a separate object with a descriptive `sub_title` (assigned by you based on the paragraph content) and `paragraph_text`. Preserve all details without summarizing."
  },
  "Competency standard VI - To maintain a commitment to professionalism": {
    "prompt": "Convert the page content into structured JSON with fields: `title` and `professional_commitment_reflections`. Break down each paragraph into an object with a descriptive `sub_title` (assigned by you based on content) and `paragraph_text`. Preserve all details without summarizing."
  },
  "Resource collection VI": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `resources`. For each resource, capture `resource_name`, `description`, and `category`. Preserve all details exactly as in the original content."
  },
  "RC VI Notice of final rule making": {
    "prompt": "Convert the page content into a structured JSON with fields: `title`, `headings`, and `sections`. For each heading or subheading, include its associated paragraph text in `key`–`value` format. Preserve the original structure and content."
  },
  "RC VI Child development homes": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `sections`. Break down each heading, subheading, and bullet point into `key`–`value` pairs. Preserve all original wording without omission."
  },
  "RC VI Early childhood association (national, regional, state or local)": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `associations`. Capture all association names, roles, levels, and related details in key–value pairs. Preserve all original data without omission."
  },
  "RC VI Zero to three": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `zero_to_three_details`. Break down each heading, subheading, and bullet point into `key`–`value` pairs. Preserve all original details."
  },
  "RC VI High scope": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `high_scope_details`. Break down each heading, subheading, and bullet point into `key`–`value` pairs. Preserve all original details."
  },
  "RC VI Summary of legal requirements": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `legal_requirements`. Break down each heading, subheading, and bullet point into `key`–`value` pairs. Preserve all original details."
  },
  "Professional Philosophy statement": {
    "prompt": "Convert the page content into a structured JSON with fields: `title` and `philosophy_sections`. Break each paragraph into a separate object with a `sub_title` (assigned by you based on the paragraph content) and `paragraph_text`. Preserve all details without summarizing."
  }
}
